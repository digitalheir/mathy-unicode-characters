//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.17 at 05:45:19 PM CEST 
//


package com.github.digitalheir.unicode;

import com.github.digitalheir.LatexCommand;
import com.github.digitalheir.simple.SimpleSurrogate;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;

import static java.util.Objects.isNull;
import static java.util.stream.Stream.of;


/**
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "afii",
    "latex",
    "varlatex",
    "mathlatex",
    "elsevier",
    "ams",
    "aps",
    "acs",
    "aip",
    "ieee",
    "wolfram",
    "springer",
    "entity",
    "font",
    "comment",
    "surrogate",
    "bmp",
    "description"
})
@XmlRootElement(name = "character")
public class Character {

  @XmlAttribute(name = "id", required = true)
  @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
  @XmlID
  public String id;
  @XmlAttribute(name = "dec")
  @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
  public String dec;
  @XmlAttribute(name = "mode")
  @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
  public String mode;
  @XmlAttribute(name = "type")
  @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
  public String type;
  @XmlAttribute(name = "image")
  @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
  public String image;
  public String afii;
  public String latex;
  public String varlatex;
  public String mathlatex;
  @XmlElement(name = "Elsevier")
  public Elsevier elsevier;
  @XmlElement(name = "AMS")
  public String ams;
  @XmlElement(name = "APS")
  public String aps;
  @XmlElement(name = "ACS")
  public String acs;
  @XmlElement(name = "AIP")
  public String aip;
  @XmlElement(name = "IEEE")
  public String ieee;
  @XmlElement(name = "Wolfram")
  public Wolfram wolfram;
  @XmlElement(name = "Springer")
  public String springer;
  public List<Entity> entity;
  public List<Font> font;
  public String comment;
  public Surrogate surrogate;
  public Bmp bmp;
  @XmlElement(required = true)
  public Description description;



  /**
   * Gets the value of the id property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getId() {
    return id;
  }

  /**
   * Gets the value of the dec property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getDec() {
    if (dec == null) {
      return "0";
    } else {
      return dec;
    }
  }

  /**
   * Gets the value of the mode property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getMode() {
    if (mode == null) {
      return "unknown";
    } else {
      return mode;
    }
  }

  /**
   * Gets the value of the type property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getType() {
    if (type == null) {
      return "other";
    } else {
      return type;
    }
  }

  /**
   * Gets the value of the image property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getImage() {
    return image;
  }

  /**
   * Gets the value of the afii property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getAfii() {
    return afii;
  }

  /**
   * Gets the value of the latex property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getLatex() {
    if(latex != null)
      return latex.trim();
    else
      return null;
  }

  /**
   * Gets the value of the ams property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getAMS() {
    return ams;
  }

  /**
   * Gets the value of the varlatex property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getVarlatex() {
    return varlatex;
  }


  /**
   * Gets the value of the mathlatex property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getMathlatex() {
    return mathlatex;
  }

  public String[] getLatexCodes() {
    String[] codes = new String[] { getLatex(), getAMS(), getVarlatex(), getMathlatex() };

    return Arrays.stream(codes)
            .filter(x -> x != null && x.length() > 0)
            .distinct()
            .toArray(String[]::new);
  }

  public String[] getProperLatexCodes() {
    String[] codes = new String[] { getLatex(), getAMS(), getVarlatex(), getMathlatex() };

    return Arrays.stream(codes)
            .filter(x -> x != null && x.length() > 0 && LatexCommand.isLatexCommand(x))
            .distinct()
            .toArray(String[]::new);
  }

  public String getElsevierDesc(){
    Elsevier elsevier = getElsevier();
    if(elsevier == null) return null;
    return elsevier.getDesc();
  }

  /**
   * Gets the value of the elsevier property.
   *
   * @return possible object is
   * {@link Elsevier }
   */
  public Elsevier getElsevier() {
    return elsevier;
  }

  /**
   * Gets the value of the aps property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getAPS() {
    return aps;
  }

  /**
   * Gets the value of the acs property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getACS() {
    return acs;
  }

  /**
   * Gets the value of the aip property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getAIP() {
    return aip;
  }


  /**
   * Gets the value of the ieee property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getIEEE() {
    return ieee;
  }

  /**
   * Gets the value of the wolfram property.
   *
   * @return possible object is
   * {@link Wolfram }
   */
  public Wolfram getWolfram() {
    return wolfram;
  }

  /**
   * Gets the value of the springer property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getSpringer() {
    return springer;
  }

  /**
   * Gets the value of the entity property.
   * <p>
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the JAXB object.
   * This is why there is not a <CODE>set</CODE> method for the entity property.
   * <p>
   * <p>
   * For example, to add a new item, do as follows:
   * <pre>
   *    getEntity().add(newItem);
   * </pre>
   * <p>
   * <p>
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link Entity }
   */
  public List<Entity> getEntity() {
    if (entity == null) {
      entity = new ArrayList<Entity>();
    }
    return this.entity;
  }

  /**
   * Gets the value of the font property.
   * <p>
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the JAXB object.
   * This is why there is not a <CODE>set</CODE> method for the font property.
   * <p>
   * <p>
   * For example, to add a new item, do as follows:
   * <pre>
   *    getFont().add(newItem);
   * </pre>
   * <p>
   * <p>
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link Font }
   */
  public List<Font> getFont() {
    if (font == null) {
      font = new ArrayList<Font>();
    }
    return this.font;
  }

  /**
   * Gets the value of the comment property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getComment() {
    return comment;
  }

  /**
   * Sets the value of the comment property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setComment(String value) {
    this.comment = value;
  }

  /**
   * Gets the value of the surrogate property.
   *
   * @return possible object is
   * {@link Surrogate }
   */
  public Surrogate getSurrogate() {
    return surrogate;
  }

  /**
   * Gets the value of the bmp property.
   *
   * @return possible object is
   * {@link Bmp }
   */
  public Bmp getBmp() {
    return bmp;
  }

  /**
   * Gets the value of the description property.
   *
   * @return possible object is
   * {@link Description }
   */
  public Description getDescription() {
    return description;
  }


  public Object getNormalizedWolfram() {
    return isNull(wolfram.getId()) ? wolfram.getvalue() : wolfram;
  }

  public Object getNormalizedDec() {
    return dec.contains("-")
        ? of(dec.split("-"))
        .mapToInt(Integer::parseInt)
        .toArray()
        : new Integer(dec)
        ;
  }

  public SimpleSurrogate createSimpleSurrogate() {
    return surrogate == null ? null : new SimpleSurrogate(surrogate);
  }

  public String getBmpRef() {
    return bmp == null ? null : ((Character) bmp.getRef()).getId();
  }

  public Object getNormalizedDescription() {
  return isNull(description.getUnicode()) ? description.getvalue() : description;
  }
}
